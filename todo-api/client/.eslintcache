[{"C:\\cvwo_assignment\\todo-api\\client\\src\\app\\store.js":"1","C:\\cvwo_assignment\\todo-api\\client\\src\\index.js":"2","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\todosSlice.js":"3","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\DeleteTodo.js":"4","C:\\cvwo_assignment\\todo-api\\client\\src\\App.js":"5","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\TodosList.js":"6","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\ToggleCompleteButton.js":"7","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\AddTodoForm.js":"8","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\EditTodoForm.js":"9","C:\\cvwo_assignment\\todo-api\\client\\src\\app\\Header.js":"10","C:\\cvwo_assignment\\todo-api\\client\\src\\auth\\authSlice.js":"11","C:\\cvwo_assignment\\todo-api\\client\\src\\auth\\Home.js":"12","C:\\cvwo_assignment\\todo-api\\client\\src\\auth\\UserForm.js":"13","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\_TodoList.js":"14","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\TogglePriorityButton.js":"15","C:\\cvwo_assignment\\todo-api\\client\\src\\theme.js":"16"},{"size":254,"mtime":1610721087919,"results":"17","hashOfConfig":"18"},{"size":301,"mtime":1610721087921,"results":"19","hashOfConfig":"18"},{"size":6799,"mtime":1610816303862,"results":"20","hashOfConfig":"18"},{"size":786,"mtime":1610721087916,"results":"21","hashOfConfig":"18"},{"size":2471,"mtime":1610815931800,"results":"22","hashOfConfig":"18"},{"size":4685,"mtime":1610816067339,"results":"23","hashOfConfig":"18"},{"size":741,"mtime":1610721087917,"results":"24","hashOfConfig":"18"},{"size":4656,"mtime":1610721087915,"results":"25","hashOfConfig":"18"},{"size":3093,"mtime":1610721087916,"results":"26","hashOfConfig":"18"},{"size":2243,"mtime":1610785520127,"results":"27","hashOfConfig":"18"},{"size":2553,"mtime":1610727212674,"results":"28","hashOfConfig":"18"},{"size":692,"mtime":1610520160012,"results":"29","hashOfConfig":"30"},{"size":6428,"mtime":1610815980323,"results":"31","hashOfConfig":"18"},{"size":1348,"mtime":1610721087918,"results":"32","hashOfConfig":"18"},{"size":1046,"mtime":1610721087917,"results":"33","hashOfConfig":"18"},{"size":678,"mtime":1610721087922,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"xklrc4",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1en2cj7",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\cvwo_assignment\\todo-api\\client\\src\\app\\store.js",[],["69","70"],"C:\\cvwo_assignment\\todo-api\\client\\src\\index.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\todosSlice.js",["71"],"C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\DeleteTodo.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\App.js",["72"],"C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\TodosList.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\ToggleCompleteButton.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\AddTodoForm.js",["73"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { unwrapResult } from '@reduxjs/toolkit'\r\nimport { Grid, TextField, Button, Checkbox, FormControlLabel, InputLabel, Select, MenuItem } from '@material-ui/core'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport { togglePrioritySort, changeSort } from './todosSlice'\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport { addNewTodo } from './todosSlice'\r\n\r\nexport const AddTodoForm = () => {\r\n  const [title, setTitle] = useState('')\r\n  const [tag, setTag] = useState('')\r\n  const [dueDate, setDueDate] = useState(null)\r\n  const [addRequestStatus, setAddRequestStatus] = useState('idle')\r\n  const user_id = useSelector(state => state.auth.user.id)\r\n  const prioritySort = useSelector(state => state.todos.prioritySort)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onTitleChanged = e => setTitle(e.target.value)\r\n  const onTagChanged = e => setTag(e.target.value)\r\n  const onDueDateChanged = e => setDueDate(e.target.value)\r\n\r\n  const handlePriorityChange = e => dispatch(togglePrioritySort())\r\n\r\n  const handleSortChange = e => dispatch(changeSort(e.target.value))\r\n\r\n  const canSave = [title, dueDate].every(Boolean) && addRequestStatus === 'idle'\r\n\r\n  const onSaveTodoClicked = async () => {\r\n    if (canSave) {\r\n      try {\r\n        setAddRequestStatus('pending')\r\n        const resultAction = await dispatch(\r\n          addNewTodo({ title, tag, user_id, due_date: dueDate })\r\n        )\r\n        unwrapResult(resultAction)\r\n        setTitle('')\r\n        setTag('')\r\n      } catch (err) {\r\n        console.error('Failed to save the todo: ', err)\r\n      } finally {\r\n        setAddRequestStatus('idle')\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2} wrap='nowrap' alignItems='center'>\r\n        <Grid item>\r\n            <TextField \r\n                label=\"Tasks\"\r\n                color='secondary'\r\n                variant='outlined'\r\n                type=\"text\" \r\n                name=\"todoTitle\" \r\n                value={title} \r\n                onChange={onTitleChanged}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onKeyPress={(ev) => {\r\n                    if (ev.key === 'Enter') {\r\n                        onSaveTodoClicked()\r\n                    }\r\n                }} />\r\n        </Grid>\r\n        <Grid item> \r\n          <TextField \r\n            label=\"Tag\"\r\n            color='secondary'\r\n            variant='outlined'\r\n            type=\"text\" \r\n            name=\"todoTag\" \r\n            value={tag} \r\n            onChange={onTagChanged}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onKeyPress={(ev) => {\r\n                if (ev.key === 'Enter') {\r\n                  onSaveTodoClicked();\r\n                }\r\n            }} />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n            color='secondary'\r\n            variant='outlined'\r\n            id=\"dueDate\"\r\n            label=\"Deadline\"\r\n            type=\"date\"\r\n            value={dueDate}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={onDueDateChanged}\r\n            onKeyPress={(ev) => {\r\n              if (ev.key === 'Enter') {\r\n                onSaveTodoClicked()\r\n              }\r\n            }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button \r\n              type=\"submit\" \r\n              color=\"primary\" \r\n              onClick={onSaveTodoClicked} \r\n              style={{maxWidth: '30px', maxHeight: '30px', minWidth: '30px', minHeight: '30px'}}>\r\n              <AddCircleOutlineIcon height={2}/>\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={prioritySort}\r\n                onChange={handlePriorityChange}\r\n                name=\"checkedB\"\r\n                color=\"primary\"\r\n              />\r\n          }\r\n        label=\"Priorities First\"\r\n          />\r\n          </Grid>\r\n          <Grid item>\r\n          <InputLabel id=\"select-tag-to-display\">Sort by deadline</InputLabel>\r\n            <Select\r\n              id=\"select-tag-to-display\"\r\n              defaultValue='by_date_down'\r\n              onChange={handleSortChange}>\r\n              <MenuItem value={'by_date_down'}>\r\n                Ascending\r\n              </MenuItem>\r\n              <MenuItem value={'by_date_up'}>\r\n                Descending\r\n              </MenuItem>\r\n            </Select>  \r\n          </Grid>\r\n    </Grid>\r\n  )\r\n}","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\EditTodoForm.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\app\\Header.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\auth\\authSlice.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\auth\\Home.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\auth\\UserForm.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\_TodoList.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\TogglePriorityButton.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\theme.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":151,"column":7,"nodeType":"80","messageId":"81","endLine":151,"endColumn":22},{"ruleId":"78","severity":1,"message":"82","line":5,"column":16,"nodeType":"80","messageId":"81","endLine":5,"endColumn":21},{"ruleId":"78","severity":1,"message":"83","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":16},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'prioritySorting' is assigned a value but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'SortIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]