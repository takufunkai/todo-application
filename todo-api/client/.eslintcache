[{"C:\\cvwo_assignment\\todo-api\\client\\src\\App.js":"1","C:\\CVWO_assignment\\todo-api\\client\\src\\index.js":"2","C:\\cvwo_assignment\\todo-api\\client\\src\\index.js":"3","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\TodosList.js":"4","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\Todo.js":"5","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\NewTodoForm.js":"6","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\EditTodoForm.js":"7","C:\\cvwo_assignment\\todo-api\\client\\src\\UI\\Header.js":"8","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\CompletedList.js":"9","C:\\cvwo_assignment\\todo-api\\client\\src\\app\\store.js":"10","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\todosSlice.js":"11","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\AddTodoForm.js":"12","C:\\cvwo_assignment\\todo-api\\client\\src\\users\\usersSlice.js":"13"},{"size":726,"mtime":1609773633262,"results":"14","hashOfConfig":"15"},{"size":500,"mtime":1608193808803,"results":"16","hashOfConfig":"17"},{"size":301,"mtime":1609772720540,"results":"18","hashOfConfig":"15"},{"size":4199,"mtime":1609773028305,"results":"19","hashOfConfig":"15"},{"size":1067,"mtime":1609203547729,"results":"20","hashOfConfig":"15"},{"size":1673,"mtime":1609532730789,"results":"21","hashOfConfig":"15"},{"size":2978,"mtime":1609200898955,"results":"22","hashOfConfig":"15"},{"size":2463,"mtime":1609697443212,"results":"23","hashOfConfig":"15"},{"size":1375,"mtime":1609184096501,"results":"24","hashOfConfig":"15"},{"size":185,"mtime":1609772666639,"results":"25","hashOfConfig":"15"},{"size":990,"mtime":1609775238318,"results":"26","hashOfConfig":"15"},{"size":1752,"mtime":1609775392839,"results":"27","hashOfConfig":"15"},{"size":318,"mtime":1609775165445,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1en2cj7",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"187wv9k",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\cvwo_assignment\\todo-api\\client\\src\\App.js",["57","58"],"C:\\CVWO_assignment\\todo-api\\client\\src\\index.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\index.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\TodosList.js",["59","60","61","62","63","64","65","66","67","68","69","70"],"C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\Todo.js",["71"],"import React from 'react';\r\nimport EditTodoForm from './EditTodoForm';\r\nimport { Card, Button, Grid, Typography, Checkbox } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst Todo = ({ \r\n    todo, removeTodo, toggleComplete, updateTodo\r\n  }) => (\r\n    <Grid container direction=\"row\">\r\n        <Grid container direction=\"row\" alignItems=\"center\">\r\n            <Grid item>\r\n               <Checkbox checked={todo.done} onChange={() => toggleComplete(todo)}/>\r\n            </Grid>\r\n            <Grid item xs>\r\n                <Typography variant=\"h5\">{todo.title}</Typography>\r\n                {todo.tag}\r\n            </Grid>\r\n        </Grid>\r\n\r\n        <Grid container justify=\"flex-end\">\r\n            {todo.done ? (null\r\n            ) : (\r\n                <EditTodoForm key={todo.id} updateTodo={updateTodo} todo={todo} /> \r\n                )}\r\n            <Button color=\"primary\" onClick={() => removeTodo(todo.id)}>\r\n                <DeleteIcon />\r\n            </Button>\r\n        </Grid>\r\n    </Grid>\r\n);\r\n\r\nexport default Todo;","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\NewTodoForm.js",["72"],"import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Grid } from '@material-ui/core'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nconst NewTodoForm = props => {\r\n  const [todo, setTodo] = useState(props.initialFormState);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target\r\n    setTodo({ ...todo, [name]: value })\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    console.log('Handling...' + JSON.stringify(todo))\r\n    if (!todo.title) return;\r\n    props.addTodo(todo)\r\n    setTodo(props.initialFormState)\r\n  }\r\n\r\n  return (\r\n      <Grid container spacing={4}>\r\n        <Grid item>\r\n            <TextField \r\n                placeholder=\"title\" \r\n                type=\"text\" \r\n                name=\"title\" \r\n                value={todo.title} \r\n                onChange={handleInputChange}\r\n                onKeyPress={(ev) => {\r\n                    if (ev.key === 'Enter') {\r\n                        handleSubmit();\r\n                    }\r\n                }} />\r\n        </Grid>\r\n        <Grid item> \r\n            <TextField \r\n                placeholder=\"tag\"\r\n                type=\"text\" \r\n                name=\"tag\" \r\n                value={todo.tag} \r\n                onChange={handleInputChange}\r\n                onKeyPress={(ev) => {\r\n                    if (ev.key === 'Enter') {\r\n                        handleSubmit();\r\n                    }\r\n                }} />\r\n        </Grid>\r\n        <Button type=\"submit\" color=\"primary\" onClick={handleSubmit}>\r\n            <AddCircleOutlineIcon height={2}/>\r\n        </Button>\r\n      </Grid>\r\n  )\r\n};\r\n\r\nexport default NewTodoForm;","C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\EditTodoForm.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\UI\\Header.js",["73"],"C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\CompletedList.js",["74"],"C:\\cvwo_assignment\\todo-api\\client\\src\\app\\store.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\todosSlice.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\TodoList\\AddTodoForm.js",[],"C:\\cvwo_assignment\\todo-api\\client\\src\\users\\usersSlice.js",[],{"ruleId":"75","severity":1,"message":"76","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":7,"column":10,"nodeType":"77","messageId":"78","endLine":7,"endColumn":14},{"ruleId":"75","severity":1,"message":"80","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"81","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"82","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":13},{"ruleId":"75","severity":1,"message":"83","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":21},{"ruleId":"75","severity":1,"message":"84","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":19},{"ruleId":"75","severity":1,"message":"85","line":5,"column":19,"nodeType":"77","messageId":"78","endLine":5,"endColumn":24},{"ruleId":"75","severity":1,"message":"79","line":5,"column":26,"nodeType":"77","messageId":"78","endLine":5,"endColumn":30},{"ruleId":"75","severity":1,"message":"86","line":5,"column":32,"nodeType":"77","messageId":"78","endLine":5,"endColumn":43},{"ruleId":"75","severity":1,"message":"87","line":6,"column":3,"nodeType":"77","messageId":"78","endLine":6,"endColumn":13},{"ruleId":"75","severity":1,"message":"88","line":6,"column":15,"nodeType":"77","messageId":"78","endLine":6,"endColumn":21},{"ruleId":"75","severity":1,"message":"89","line":6,"column":23,"nodeType":"77","messageId":"78","endLine":6,"endColumn":31},{"ruleId":"75","severity":1,"message":"90","line":6,"column":33,"nodeType":"77","messageId":"78","endLine":6,"endColumn":42},{"ruleId":"75","severity":1,"message":"91","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"81","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"92","line":14,"column":8,"nodeType":"77","messageId":"78","endLine":14,"endColumn":16},{"ruleId":"93","severity":1,"message":"94","line":12,"column":15,"nodeType":"95","endLine":12,"endColumn":36},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'useDispatch' is defined but never used.","'NewTodoForm' is defined but never used.","'Paper' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'TextField' is defined but never used.","'Card' is defined but never used.","'MailIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression"]